<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.warehouse.management.order.repository.OrderRepository">
	
	<select id="getCustomerOption" resultType="com.warehouse.management.order.dto.OptionDto">
		SELECT 
			customer_id value,
			CONCAT(first_name,' ',last_name) title
		FROM customers
		WHERE deleted_at IS NULL;
	</select>
	
	<select id="getDeliveryAddressOption" resultType="com.warehouse.management.order.dto.OptionDto">
		SELECT 
			delivery_address_id value,
			address_name title
		FROM delivery_addresses
		WHERE deleted_at IS NULL AND customer_id=#{customerId};
	</select>
	
	<select id="getWarehouseProductOption" resultType="com.warehouse.management.order.dto.OrderDetailDto">
		SELECT 
			wt.warehouse_detail_id warehouseDetailId,
			p.product_name productName,
			p.price,
			p.discount
		FROM warehouse_details wt
		LEFT JOIN products p ON p.product_id= wt.product_id
		WHERE wt.deleted_at IS NULL AND wt.stock>0 AND warehouse_id= (SELECT w.warehouse_id FROM warehouses w
			WHERE w.region_id=(SELECT region_id FROM delivery_addresses WHERE delivery_address_id=#{addressId}) AND w.deleted_at IS NULL
			LIMIT 1);
	</select>
	
	<!-- <select id="isValidOrderId" resultType="boolean">
		SELECT NOT COUNT(*)>0
		FROM order_details 
		WHERE order_id != #{orderId}
	</select> -->
	
	<!-- <select id="createAndSelectOrder" resultType="com.warehouse.management.order.dto.OrderCreateResponseDto">
		WITH inserted AS (
	    INSERT INTO order_details(
	        order_id, 
	        warehouse_detail_id, 
	        qty, 
	        price, 
	        discount, 
	        created_at, 
	        updated_at
	    )
	    SELECT
	        (SELECT order_id FROM orders WHERE customer_id = #{customerId} LIMIT 1), 
	        #{warehouseDetailId}, 
	        #{qty}, 
	        (SELECT price FROM products WHERE product_id = #{warehouseDetailId} LIMIT 1), 
	        (SELECT discount FROM products WHERE product_id = #{warehouseDetailId} LIMIT 1), 
	        NOW(),
	        NOW()
	    RETURNING *
	)
	SELECT 
		order_detail_id orderDetailid,
		order_id orderId, 
        warehouse_detail_id warehouseDetailId, 
        (SELECT product_name FROM products WHERE product_id = inserted.warehouse_detail_id) AS productName,        
        qty, 
        price, 
        discount
	FROM inserted;
	
	</select> -->
</mapper>