<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.warehouse.management.order.repository.OrderRepository">
	
	<select id="getCustomerOption" resultType="com.warehouse.management.order.dto.OptionDto">
		SELECT 
			customer_id value,
			CONCAT(first_name,' ',last_name) title
		FROM customers
		WHERE deleted_at IS NULL;
	</select>
	
	<select id="getDeliveryAddressOption" resultType="com.warehouse.management.order.dto.OptionDto">
		SELECT 
			delivery_address_id value,
			address_name title
		FROM delivery_addresses
		WHERE deleted_at IS NULL AND customer_id=#{customerId};
	</select>
	
	<select id="getWarehouseProductOption" resultType="com.warehouse.management.order.dto.OrderDetailDto">
		SELECT 
			wt.warehouse_detail_id warehouseDetailId,
			p.product_name productName,
			p.price,
			p.discount
		FROM warehouse_details wt
		LEFT JOIN products p ON p.product_id= wt.product_id
		WHERE wt.deleted_at IS NULL AND wt.stock>0 AND warehouse_id= (SELECT w.warehouse_id FROM warehouses w
			WHERE w.region_id=(SELECT region_id FROM delivery_addresses WHERE delivery_address_id=#{addressId}) AND w.deleted_at IS NULL
			LIMIT 1);
	</select>
	
	<!-- <select id="isValidOrderId" resultType="boolean">
		SELECT NOT COUNT(*)>0
		FROM order_details 
		WHERE order_id != #{orderId}
	</select> -->
	
	<select id="createAndSelectOrder" resultType="com.warehouse.management.order.dto.OrderCreateDto">
        <!-- Create Order -->
        INSERT INTO orders(
            employee_id, 
            customer_id, 
            delivery_address_id, 
            order_code, 
            status, 
            created_at, 
            updated_at
        )
        VALUES (
            1, 
            #{customerId}, 
            #{deliveryAddressId}, 
            'O0001', 
            1, 
            NOW(), 
            NOW()
        );
        <!-- Create Order Detail -->
        <foreach collection="orderDetails" item="detail" separator=";">
      
            INSERT INTO order_details (
                order_id, 
                warehouse_detail_id, 
                qty, 
                price, 
                discount, 
                created_at, 
                updated_at
            )
            VALUES (
                (SELECT order_id FROM orders WHERE customer_id = #{customerId} ORDER BY order_id DESC LIMIT 1), 
                #{detail.warehouseDetailId}, 
                #{detail.qty}, 
                (SELECT price FROM products WHERE product_id = (SELECT product_id FROM warehouse_details WHERE warehouse_detail_id = #{detail.warehouseDetailId} LIMIT 1)), 
                (SELECT discount FROM products WHERE product_id = (SELECT product_id FROM warehouse_details WHERE warehouse_detail_id = #{detail.warehouseDetailId} LIMIT 1)), 
                NOW(),
                NOW()
            );
    	</foreach>
    
	    SELECT 
	   	  order_id AS orderId, 
	      employee_id AS employeeId, 
	      customer_id AS customerId, 
	      delivery_address_id AS deliveryAddressId, 
	      order_code AS orderCode, 
	      status 
	    FROM orders 
	    ORDER BY order_id DESC LIMIT 1 ;
</select>

	
<select id="selectOrderDetails" resultType="com.warehouse.management.order.dto.OrderDetailCreateDto">
	SELECT 
		order_detail_id AS orderDetailId,
		order_id AS orderId, 
		warehouse_detail_id AS warehouseDetailId, 
		(SELECT product_id FROM warehouse_details WHERE warehouse_detail_id = order_details.warehouse_detail_id LIMIT 1) AS productId,
		(SELECT product_name FROM products WHERE product_id = (SELECT product_id FROM warehouse_details WHERE warehouse_detail_id = order_details.warehouse_detail_id LIMIT 1)) AS productName,
		qty, 
		price, 
		discount
	FROM order_details
	WHERE order_id=#{orderId};
    <!-- <foreach collection="orderDetails" item="detail" separator=";">
      
            INSERT INTO order_details (
                order_id, 
                warehouse_detail_id, 
                qty, 
                price, 
                discount, 
                created_at, 
                updated_at
            )
            VALUES (
                (SELECT order_id FROM orders WHERE customer_id = #{customerId} LIMIT 1), 
                #{detail.warehouseDetailId}, 
                #{detail.qty}, 
                (SELECT price FROM products WHERE product_id = (SELECT product_id FROM warehouse_details WHERE warehouse_detail_id = #{detail.warehouseDetailId} LIMIT 1)), 
                (SELECT discount FROM products WHERE product_id = (SELECT product_id FROM warehouse_details WHERE warehouse_detail_id = #{detail.warehouseDetailId} LIMIT 1)), 
                NOW(),
                NOW()
            );
            
            SELECT 
	            order_detail_id AS orderDetailId,
	            order_id AS orderId, 
	            warehouse_detail_id AS warehouseDetailId, 
	            (SELECT product_id FROM warehouse_details WHERE warehouse_detail_id = #{detail.warehouseDetailId} LIMIT 1) AS productId,
	            (SELECT product_name FROM products WHERE product_id = (SELECT product_id FROM warehouse_details WHERE warehouse_detail_id = #{detail.warehouseDetailId} LIMIT 1)) AS productName,
	            qty, 
	            price, 
	            discount
        	FROM inserted
        
       
    </foreach> -->
</select>

</mapper>